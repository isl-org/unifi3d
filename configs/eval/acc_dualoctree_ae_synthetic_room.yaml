# @package _global_

# to execute this experiment run:
# python eval.py experiment=example

defaults:
  - override /data: dualoctree
  - override /model: graph_ae
  - override /trainer: default
  - override /logger: aim     # default is null.


# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

task_name: "eval"

ckpt_path: 
train: false

tags: ["eval", "synthetic_room", "dualoctree", "graph_ae"]

seed: 12345

model:
  _target_: unifi3d.trainers.encoder_decoder_trainer.EncoderDecoderTrainer
  # loss_requires_grad: True # This will calculate grad even during test and validation set, because dualoctree requires grad to calculate loss. Please set it to False normally. Not in use as Synthetic Room uses different dataset for training and testing.
  compile: false

paths:
  log_dir: ${paths.root_dir}/logs/dualoctree/acc_graph_ae/room/eval

data:
  test_batch_size: 1

  test_collate_fn:
    _target_: ocnn.collate_octrees
    _partial_: true

  data_test:
    _target_: unifi3d.data.dualoctree_dataset.DualOctreeDataset
    mode: "test"
    dataset:
      _target_: unifi3d.data.data_iterators.SyntheticRoomIterator
      path: ${paths.room_dataset_dir}
      mode: "eval"                 # eval will return point cloud generated by dualoctree repo.
      num_samples: -1              # For faster testing, you can restrict the reading to a small number. Set it to -1 if you do not intend to use it.
    config:
      transform_config:
        point_scale: 0.6
        depth: 7
        full_depth: 3
        node_dis: True
        split_level: True
        adaptive: False # default is False. Build the adaptive octree
        node_feature: False # default is False. Calculate the node feature
      create_mesh_config: ${data.data_train.config.create_mesh_config}

    read_file:
      _target_: unifi3d.data.dualoctree_dataset.read_ply_file
      _partial_: True

    transform:
      _target_: unifi3d.data.dualoctree_dataset.TransformPointCloud
      config: ${data.data_test.config.transform_config}