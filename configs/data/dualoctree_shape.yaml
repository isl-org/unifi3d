_target_: unifi3d.data.dualoctree_dataset.DualOctreeDataModule

num_workers: 0                  # Leave it as 0 for now. Setting it to a specific number, e.g.7, may cause dataloader exit unexpected error if it exceeds the limit.
train_batch_size: 112           # 112 for no and bf16, 180 for fp16 with validation
val_batch_size: 1         
test_batch_size: 1
train_collate_fn:
  _target_: unifi3d.data.dualoctree_dataset.collate_func
  _partial_: true
val_collate_fn: ${data.train_collate_fn}
test_collate_fn: ${data.train_collate_fn}
data_train:
  _target_: unifi3d.data.dualoctree_dataset.DualOctreeDataset
  mode: "train"
  dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    mode: ${data.data_train.mode}
    categories: ${categories}
    split_path: data/split_shapenet.csv
    rendered_img_path: data/shapenet2/renderings

  config:
    transform_config:
      depth: ${octree_depth}      # The octree depth starting from 0, synthetic room has depth up to 7, shapenet was using 6.
      full_depth: ${full_depth}               # The full depth, from depth (6, 7, 8) up to level 2
      node_dis: True              # True and there are normals, the octree features is 4 channels, i.e., the average normals and the 1 channel displacement. If node_dis is True, there are no normals, the feature is also 4 channels, i.e., a 3 channel (displacement of average points relative to the center points, and the last channel is constant)
      split_label: True           # Save the split label
      load_sdf: True
      load_occu: False            # Defaults to False. This was set to true for synthetic room
      sample_surf_points: False   # Defaults to False.
      adaptive: False             # Build the adaptive octree
      node_feature: False         # Calculate the node feature
      distort: False              # No data augmentation

    create_mesh_config:
      size: 128 # shapenet_ae_eval, shapenet_eval is 128
      mesh_scale: 0.5
      sdf_scale: 0.9      # always set to 0.9

  read_file:
    _target_: unifi3d.data.dualoctree_dataset.ReadFile
    load_sdf: ${data.data_train.config.transform_config.load_sdf}
    load_occu: ${data.data_train.config.transform_config.load_occu}
    file_number: -1
    depth: ${octree_depth}

  transform:
    _target_: unifi3d.data.dualoctree_dataset.TransformShape
    config: ${data.data_train.config.transform_config}

data_test:
  _target_: ${data.data_train._target_}
  mode: "test"
  dataset:
    _target_: ${data.data_train.dataset._target_}
    path: ${paths.shapenet_preprocessed_dir}
    mode: ${data.data_test.mode}
    categories: ${categories}

  config:
    transform_config:
      depth: ${octree_depth}
      full_depth: ${full_depth}
      node_dis: True
      split_label: True
      load_sdf: False
      load_occu: False
      sample_surf_points: False
      adaptive: False # default is False. Build the adaptive octree
      node_feature: False # default is False. Calculate the node feature
      distort: False
    create_mesh_config: ${data.data_train.config.create_mesh_config}

  read_file: ${data.data_train.read_file}

  transform:
    _target_: ${data.data_train.transform._target_}
    config: ${data.data_test.config.transform_config}

data_val:
  _target_: ${data.data_train._target_}
  mode: "val"
  dataset:
    _target_: ${data.data_train.dataset._target_}
    path: ${paths.shapenet_preprocessed_dir}
    mode: ${data.data_val.mode}
    categories: ${categories}

  config: ${data.data_test.config}

  read_file: ${data.data_train.read_file}

  transform:
    _target_: ${data.data_train.transform._target_}
    config: ${data.data_train.config.transform_config}
