# @package _global_

# to execute this experiment with single GPU run:
# accelerate launch scripts/acc_train.py experiment=dualoctree_ae.yaml

# For multi-GPU training run:
# accelerate launch scripts/acc_train.py trainer=ddp experiment=dualoctree_ae.yaml

# For faster training debugging with fewer samples on a single GPU:
# accelerate launch scripts/acc_train.py experiment=dualoctree_ae.yaml data.config.num_samples=10

defaults:
  - override /data: TODO
  - override /model: diffusion
  - override /net_encode: TODO
  - override /net_denoise: dit
  - override /diffusion_sampler: ddpm # can be changed to ddim
  - override /trainer: default
  - override /logger: aim     # default is null.

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["train", "sdf", "diffusion"]

experiment_name: TODO

seed: 12345

net_encode:
  ckpt_path: TODO # add path to the pretrained AE checkpoint for encoding
  
# DiT parameters
net_denoise: 
  patch_embed: TODO # tokenizer, please check unifi3d.models.modules.patch_embed
    # _target_: unifi3d.models.modules.patch_embed.DummyTokenizer # if your latent is already tokenized
    # _target_: unifi3d.models.modules.patch_embed.PatchEmbed3D # for 3D patchifying
  in_channels: TODO # DiT parameters dependent on the latent shape
  hidden_size: TODO # DiT parameters dependent on the latent shape

diffusion_sampler:
  beta_schedule: squaredcos_cap_v2 # optional: change parameters of the diffusion scheduler here

model:
  encoder_decoder: ${net_encode}
  diff_model: ${net_denoise}
  sampling_scheduler: ${diffusion_sampler}

# Currently trained for ShapeNet airplane category
data:
  batch_size: 1
  dataset:
      _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
      path: ${paths.shapenet_preprocessed_dir}
      categories: 
        - "airplane"
      mode: "train"
  val_dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    categories: 
      - "airplane"
    mode: "val"
  test_dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    categories: 
      - "airplane"
    mode: "test"
    
trainer:
  max_epochs: 900
  check_train_every_n_iter: 1000
  check_val_every_n_epoch: 100
  experiment: "TODO" # set experiment name

  batch_post_process: null

paths:
  log_dir: ${paths.root_dir}/logs/${experiment_name}

test: false