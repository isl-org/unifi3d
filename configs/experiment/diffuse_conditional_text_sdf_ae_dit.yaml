# @package _global_

# to execute this experiment with single GPU run:
# accelerate launch scripts/accelerate/acc_train.py experiment=diffuse_conditional_text_sdf_ae_dit

defaults:
  - override /data: sdf
  - override /model: diffusion
  - override /net_encode: vae_3d
  - override /net_denoise: dit
  - override /diffusion_sampler: ddpm
  - override /trainer: default
  - override /logger: aim     # default is null.

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["train", "sdf", "diffusion"]
seed: 12345
experiment_name: "diffuse_conditional_text_sdf_ae_dit"

# # resume training from checkpoint
# ckpt_path: ???
# resume_training: true

net_encode:
  ckpt_path: ${paths.shared_ae_checkpoint_folder}/Chair/sdf_ae/model.safetensors
  is_vae: false
  
net_denoise:
  patch_embed: 
    _target_: unifi3d.models.modules.patch_embed.PatchEmbed3D
    embed_dim: 768
    patch_size: 4
  in_channels: 3
  hidden_size: 768
  conditioning_modes: 
    # - image
    - text

diffusion_sampler:
  beta_schedule: squaredcos_cap_v2
  clip_sample: False

model:
  encoder_decoder: ${net_encode}
  diff_model: ${net_denoise}
  sampling_scheduler: ${diffusion_sampler}
  optimizer:
    lr: 0.0001
  scheduler:
    _target_: torch.optim.lr_scheduler.StepLR
    # lr_lambda: null
    step_size: 100
    gamma: 0.9
  
logger: 
  aim: # Should be the same as /logger
    config: 
      loggers: ["metric", "image", "mesh", "hparams"] # List and type of logging implementations 
      tracked_variables: # The keys should match aim/loggers
        metric: ["loss", "lr"]
        image: ["render_gt", "render_rec_gt", "render_rec"]
        mesh: ["mesh_gt", "mesh_rec_gt", "mesh_rec"]

data:
  batch_size: 8
  dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    categories: 
      - "airplane"
      - "car"
      - "chair"
    mode: "train"
  val_dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    categories: 
      - "airplane"
      - "car"
      - "chair"
    mode: "val"
  test_dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    categories: 
      - "airplane"
      - "car"
      - "chair"

    mode: "test"

trainer:
  max_epochs: 8000
  log_every_n_iter: 1
  log_image_every_n_iters: 100 # How often to log images within iterations. Disabled by default (-1).
  check_val_every_n_epoch: 10
  save_checkpoint_every_n_epoch: 5
  batch_post_process: null

mixed_precision: "no"

paths:
  log_dir: ${paths.root_dir}/logs/sdf/cond_gen

test: false