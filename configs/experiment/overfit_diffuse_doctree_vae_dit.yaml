# @package _global_

# to execute this experiment:
# accelerate launch scripts/accelerate/acc_train.py experiment=overfit_diffuse_doctree_vae_dit

defaults:
  - override /data: dualoctree_shape
  - override /model: diffusion
  - override /net_encode: graph_vae_object
  - override /net_denoise: dit
  - override /trainer: default
  - override /logger: aim

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["train", "dualoctree", "diffusion"]

seed: 12345
experiment_name: doctree_vae_dit_shapenet_airplane_${trainer.max_epochs}epoch_bs${data.train_batch_size}_s${data.data_train.dataset.num_samples}_code${net_encode.code_channel}_patchembed3d_betap009p07
categories: 
  - "airplane"
data:
  train_batch_size: 1
  val_batch_size: 1
  test_batch_size: 1
  data_train:
    dataset:
      num_samples: 1
  data_test:
    dataset:
      num_samples: 1
  data_val:
    dataset:
      num_samples: 1

net_encode:
  ckpt_path: ${paths.dualoctree_vae_airplane_ckpt}
  code_channel: 8 # Update this number based on the ckpt it uses.

net_denoise:
  patch_embed: 
    _target_: unifi3d.models.modules.patch_embed.PatchEmbed3D
    img_size: 4
    patch_size: 4
    in_chans: ${net_encode.code_channel}
    embed_dim: 768 # default.
  in_channels: ${net_encode.code_channel}    # The output is already in token format.
  hidden_size: ${net_denoise.patch_embed.embed_dim}
  num_heads: 4 # hidden_size needs to be divisible by num_heads. Default is 16.

diffusion_sampler:
  clip_sample: True
  beta_start: 0.009
  beta_end: 0.07

model:
  encoder_decoder: ${net_encode}
  diff_model: ${net_denoise}
  sampling_scheduler: ${diffusion_sampler}
  optimizer:
    lr: 0.0001

trainer:
  max_epochs: 3600
  log_every_n_iter: 1
  check_val_every_n_epoch: -1

  batch_post_process: null

paths:
  log_dir: ${paths.root_dir}/logs/hq3dfm/shapenet/dualoctree_dit/${experiment_name}

test: false