# @package _global_

# to execute this experiment with single GPU run:
# accelerate launch scripts/accelerate/acc_train.py experiment=diffuse_triplane_ae_unet


defaults:
  - override /net_encode: triplane_ae
  - override /net_denoise: unet
  - override /data: triplane
  - override /model: diffusion
  - override /diffusion_sampler: ddpm
  - override /trainer: default
  - override /logger: aim

# all parameters below will be merged with parameters from default configurations set above
# this allows you to overwrite only specified parameters

tags: ["train", "triplane", "diffusion"]
seed: 12345
experiment_name: "diffuse_triplane_ae_unet_chair"

# # resume training from checkpoint
# ckpt_path: path/to/ckpt
# resume_training: True

net_encode:
  ckpt_path: ${paths.shared_ae_checkpoint_folder}/Chair/triplane_ae/model.safetensors
  config:
    model:
      triplane_feature_mode: image


net_denoise:
  dims: 2
  model_channels: 192
  in_channels: 8
  out_channels: 8
  attention_resolutions: [1, 2, 4]
  channel_mult: [1, 2, 4, 4] # adding 2 seems to have skip unevenly between w,h,d
  num_heads: 6
  use_3d_aware_conv: false

diffusion_sampler:
  beta_schedule: squaredcos_cap_v2
  clip_sample: False

epochs: 8000

model:
  encoder_decoder: ${net_encode}
  diff_model: ${net_denoise}
  sampling_scheduler: ${diffusion_sampler}
  optimizer:
    lr: 0.00005
  scheduler:
    _target_: torch.optim.lr_scheduler.LambdaLR
    lr_lambda:
      _target_: unifi3d.utils.scheduler.lambda_lr_utils.get_lambda_warmup_decay
      warmup_epochs: 80
      min_lr: 0.000001 # 1e-6
      max_lr: 0.0001 # 1e-4
      max_epoch: ${epochs}
    _partial_: true

data:
  batch_size: 8
  dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    categories:
      - "chair"
    mode: "train"
  val_dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    categories:
      - "chair"
    mode: "val"
  test_dataset:
    _target_: unifi3d.data.data_iterators.ShapenetPreprocessedIterator
    path: ${paths.shapenet_preprocessed_dir}
    categories:
      - "chair"
    mode: "test"

trainer:
  max_epochs: ${epochs}
  log_every_n_iter: 100
  log_image_every_n_iters: 100
  check_val_every_n_epoch: -1
  save_checkpoint_every_n_epoch: 10
  batch_post_process: null

paths:
  log_dir: ${paths.root_dir}/logs/${experiment_name}

test: false
